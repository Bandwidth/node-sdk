/* tslint:disable */
/* eslint-disable */
/**
 * Bandwidth
 * Bandwidth\'s Communication APIs
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: letstalk@bandwidth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


// May contain unused imports in some cases
// @ts-ignore
import type { CallDirectionEnum } from './call-direction-enum';

/**
 * If the target call leaves the <Bridge>, then this callback is sent to the bridgeCompleteUrl, and the BXML returned in it is executed on the call. If this webhook is sent, the Bridge Target Complete webhook is NOT sent. This callback is also sent if any problem occurs that prevents the calls to be bridged.
 * @export
 * @interface BridgeCompleteCallback
 */
export interface BridgeCompleteCallback {
    /**
     * The event type, value can be one of the following: answer, bridgeComplete, bridgeTargetComplete, conferenceCreated, conferenceRedirect, conferenceMemberJoin, conferenceMemberExit, conferenceCompleted, conferenceRecordingAvailable, disconnect, dtmf, gather, initiate, machineDetectionComplete, recordingComplete, recordingAvailable, redirect, transcriptionAvailable, transferAnswer, transferComplete, transferDisconnect.
     * @type {string}
     * @memberof BridgeCompleteCallback
     */
    'eventType'?: string;
    /**
     * The approximate UTC date and time when the event was generated by the Bandwidth server, in ISO 8601 format. This may not be exactly the time of event execution.
     * @type {string}
     * @memberof BridgeCompleteCallback
     */
    'eventTime'?: string;
    /**
     * The user account associated with the call.
     * @type {string}
     * @memberof BridgeCompleteCallback
     */
    'accountId'?: string;
    /**
     * The id of the application associated with the call.
     * @type {string}
     * @memberof BridgeCompleteCallback
     */
    'applicationId'?: string;
    /**
     * The provided identifier of the caller. Must be a phone number in E.164 format (e.g. +15555555555).
     * @type {string}
     * @memberof BridgeCompleteCallback
     */
    'from'?: string;
    /**
     * The phone number that received the call, in E.164 format (e.g. +15555555555).
     * @type {string}
     * @memberof BridgeCompleteCallback
     */
    'to'?: string;
    /**
     * 
     * @type {CallDirectionEnum}
     * @memberof BridgeCompleteCallback
     */
    'direction'?: CallDirectionEnum;
    /**
     * The call id associated with the event.
     * @type {string}
     * @memberof BridgeCompleteCallback
     */
    'callId'?: string;
    /**
     * The URL of the call associated with the event.
     * @type {string}
     * @memberof BridgeCompleteCallback
     */
    'callUrl'?: string;
    /**
     * (optional) If call queueing is enabled and this is an outbound call, time the call was queued, in ISO 8601 format.
     * @type {string}
     * @memberof BridgeCompleteCallback
     */
    'enqueuedTime'?: string | null;
    /**
     * Time the call was started, in ISO 8601 format.
     * @type {string}
     * @memberof BridgeCompleteCallback
     */
    'startTime'?: string;
    /**
     * Time the call was answered, in ISO 8601 format.
     * @type {string}
     * @memberof BridgeCompleteCallback
     */
    'answerTime'?: string | null;
    /**
     * (optional) The tag specified on call creation. If no tag was specified or it was previously cleared, this field will not be present.
     * @type {string}
     * @memberof BridgeCompleteCallback
     */
    'tag'?: string | null;
    /**
     * Reason the call failed - hangup, busy, timeout, cancel, rejected, callback-error, invalid-bxml, application-error, account-limit, node-capacity-exceeded, error, or unknown.
     * @type {string}
     * @memberof BridgeCompleteCallback
     */
    'cause'?: string;
    /**
     * Text explaining the reason that caused the call to fail in case of errors.
     * @type {string}
     * @memberof BridgeCompleteCallback
     */
    'errorMessage'?: string | null;
    /**
     * Bandwidth\'s internal id that references the error event.
     * @type {string}
     * @memberof BridgeCompleteCallback
     */
    'errorId'?: string | null;
}



