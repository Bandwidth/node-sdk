/* tslint:disable */
/* eslint-disable */
/**
 * Bandwidth
 * Bandwidth\'s Communication APIs
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: letstalk@bandwidth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


// May contain unused imports in some cases
// @ts-ignore
import { CallDirectionEnum } from './call-direction-enum';

/**
 * The Disconnect event is fired when a call ends, for any reason.
 * @export
 * @interface DisconnectCallback
 */
export interface DisconnectCallback {
    /**
     * The event type, value can be one of the following: answer, bridgeComplete, bridgeTargetComplete, conferenceCreated, conferenceRedirect, conferenceMemberJoin, conferenceMemberExit, conferenceCompleted, conferenceRecordingAvailable, disconnect, dtmf, gather, initiate, machineDetectionComplete, recordingComplete, recordingAvailable, redirect, transcriptionAvailable, transferAnswer, transferComplete, transferDisconnect.
     * @type {string}
     * @memberof DisconnectCallback
     */
    'eventType'?: string;
    /**
     * The approximate UTC date and time when the event was generated by the Bandwidth server, in ISO 8601 format. This may not be exactly the time of event execution.
     * @type {string}
     * @memberof DisconnectCallback
     */
    'eventTime'?: string;
    /**
     * The user account associated with the call.
     * @type {string}
     * @memberof DisconnectCallback
     */
    'accountId'?: string;
    /**
     * The id of the application associated with the call.
     * @type {string}
     * @memberof DisconnectCallback
     */
    'applicationId'?: string;
    /**
     * The provided identifier of the caller: can be a phone number in E.164 format (e.g. +15555555555) or one of Private, Restricted, Unavailable, or Anonymous.
     * @type {string}
     * @memberof DisconnectCallback
     */
    'from'?: string;
    /**
     * The phone number that received the call, in E.164 format (e.g. +15555555555).
     * @type {string}
     * @memberof DisconnectCallback
     */
    'to'?: string;
    /**
     * The call id associated with the event.
     * @type {string}
     * @memberof DisconnectCallback
     */
    'callId'?: string;
    /**
     * 
     * @type {CallDirectionEnum}
     * @memberof DisconnectCallback
     */
    'direction'?: CallDirectionEnum;
    /**
     * The URL of the call associated with the event.
     * @type {string}
     * @memberof DisconnectCallback
     */
    'callUrl'?: string;
    /**
     * (optional) If call queueing is enabled and this is an outbound call, time the call was queued, in ISO 8601 format.
     * @type {string}
     * @memberof DisconnectCallback
     */
    'enqueuedTime'?: string | null;
    /**
     * Time the call was started, in ISO 8601 format.
     * @type {string}
     * @memberof DisconnectCallback
     */
    'startTime'?: string;
    /**
     * Time the call was answered, in ISO 8601 format.
     * @type {string}
     * @memberof DisconnectCallback
     */
    'answerTime'?: string | null;
    /**
     * The time that the recording ended in ISO-8601 format
     * @type {string}
     * @memberof DisconnectCallback
     */
    'endTime'?: string;
    /**
     * Reason the call failed - hangup, busy, timeout, cancel, rejected, callback-error, invalid-bxml, application-error, account-limit, node-capacity-exceeded, error, or unknown.
     * @type {string}
     * @memberof DisconnectCallback
     */
    'cause'?: string;
    /**
     * Text explaining the reason that caused the call to fail in case of errors.
     * @type {string}
     * @memberof DisconnectCallback
     */
    'errorMessage'?: string | null;
    /**
     * Bandwidth\'s internal id that references the error event.
     * @type {string}
     * @memberof DisconnectCallback
     */
    'errorId'?: string | null;
    /**
     * (optional) The tag specified on call creation. If no tag was specified or it was previously cleared, this field will not be present.
     * @type {string}
     * @memberof DisconnectCallback
     */
    'tag'?: string | null;
}



